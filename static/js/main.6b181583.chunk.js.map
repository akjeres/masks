{"version":3,"sources":["helpers/yt_helper.js","helpers/API-key.js","components/spinner/index.js","components/spinner/spinner.js","components/header.js","components/card.js","components/list.js","components/pagination.js","App.js","serviceWorker.js","index.js","helpers/channel-id.js"],"names":["YT_API","constructor","get_videos_from_list","channel_ID","pageToken","results","suffix","request","this","endpoint","fetch","then","res","json","Error","JSON","stringify","error","Spinner","className","Header","React","Component","render","Card","loading","src","props","data","thumbnails","high","url","alt","title","dangerouslySetInnerHTML","__html","description","href","List","list","map","i","key","etag","id","videoId","snippet","Pagination","prev_page","page","next_page","total","increasePage","decreasePage","prev_button_condition","next_button_condition","console","log","extra_className","condition","aria-label","onClick","disabled","aria-hidden","App","super","get_list","setState","is_loading","api","new_state","items","length","prevPageToken","nextPageToken","catch","e","parse","message","state","newPage","componentDidMount","componentDidUpdate","prevProps","prevState","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b181583.chunk.js","sourcesContent":["import { API_key as key } from './API-key';\nimport { dummy } from './dummy';\n\nexport default class YT_API {\n    constructor () {\n        this.endpoint = 'https://www.googleapis.com/youtube/v3';\n    }\n\n    get_videos_from_list = ( { channel_ID, pageToken, results = 18 } ) => {\n        const suffix = pageToken ? `&pageToken=${ pageToken }` : '';\n        const request = `${ this.endpoint }/search?key=${ key }` +\n            `&channelId=${ channel_ID }` +\n            `&part=snippet,id` +\n            `&type=video` +\n            `&order=date` +\n            `&maxResults=${ results }` +\n            suffix;\n\n        return fetch(request)\n            .then(res => {\n                return res.json();\n            })\n            .then(res => {\n                if ('error' in res) throw new Error(JSON.stringify(res.error));\n\n                return res;\n            })\n    }\n}","export const API_key = 'AIzaSyBmz3PSrhwDX6iN91VBVsC1_FLj_1YWJnc';","import { Spinner } from './spinner';\r\n\r\nexport default Spinner;","import React from \"react\";\r\nimport './spinner.css';\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n      <div className=\"preloader\">\r\n          <div className=\"loadingio-spinner-chunk-iu8m6z8safl\">\r\n              <div className=\"ldio-h8jpm9maxb8\">\r\n                  <div>\r\n                      <div>\r\n                          <div></div>\r\n                          <div></div>\r\n                          <div></div>\r\n                          <div></div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  );\r\n};","import React from 'react';\n\nexport default class Header extends React.Component {\n  render() {\n      return (\n          <header></header>\n      );\n  }\n};","import React from 'react';\n\nexport default class Card extends React.Component {\n    render() {\n        return (\n            <div className=\"mb-4 col-lg-4 col-md-6 col-12\">\n                <div className=\"h-100\">\n                    <div className=\"h-100 card\">\n                        <img loading=\"lazy\" src={this.props.data.thumbnails.high.url} className=\"card-img-top\" alt={this.props.data.title} />\n                        <div className=\"d-flex flex-column card-body\">\n                            <h5 className=\"card-title\" dangerouslySetInnerHTML={{__html: this.props.data.title }} />\n                            <p className=\"flex-grow-1 card-text\">{this.props.data.description}</p>\n                            <a href=\"#\" className=\"btn btn-primary align-self-center\">Play Demo</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};","import React from 'react';\nimport Card from './card';\n\nexport default class List extends React.Component {\n    render() {\n        const { list } = this.props;\n        return (\n            <div className=\"list\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        { list.map((i) => {\n                            return <Card\n                                key={ i.etag }\n                                id={ i.id.videoId }\n                                data={ i.snippet }\n                            />\n                        }) }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};","import React from \"react\";\r\n\r\nexport default class Pagination extends React.Component {\r\n    render() {\r\n        const {\r\n            prev_page,\r\n            page,\r\n            pageToken,\r\n            next_page,\r\n            total,\r\n            results,\r\n            increasePage,\r\n            decreasePage,\r\n        } = this.props;\r\n        const prev_button_condition = prev_page && (pageToken !== prev_page);\r\n        const next_button_condition = next_page && (total === results);\r\n        console.log('next_button_condition: ', next_button_condition );\r\n        const extra_className = (condition) => condition ? '' : 'disabled';\r\n        return (\r\n            <div className=\"pagination_wrapper\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 \">\r\n                            <nav className=\"d-flex justify-content-center\">\r\n                                <ul className=\"pagination\">\r\n                                    <li className={`page-item ${ extra_className(prev_button_condition) }`}>\r\n                                        <button className=\"page-link\" aria-label=\"Previous\" onClick={ prev_button_condition ? decreasePage : null } disabled={ !prev_button_condition }>\r\n                                            <span aria-hidden=\"true\">&laquo;</span>\r\n                                            <span className=\"sr-only\">Previous</span>\r\n                                        </button>\r\n                                    </li>\r\n                                    <li className=\"page-item disabled\"><span className=\"page-link\">&hellip;</span></li>\r\n                                    <li className=\"page-item active\"><span className=\"page-link\">{ page }</span></li>\r\n                                    <li className=\"page-item disabled\"><span className=\"page-link\">&hellip;</span></li>\r\n                                    <li className={`page-item ${ extra_className(next_button_condition) }`}>\r\n                                        <button className=\"page-link\" aria-label=\"Next\" onClick={ next_button_condition ? increasePage : null } disabled={ !next_button_condition }>\r\n                                            <span aria-hidden=\"true\">&raquo;</span>\r\n                                            <span className=\"sr-only\">Next</span>\r\n                                        </button>\r\n                                    </li>\r\n                                </ul>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\n\nimport YT_API from './helpers/yt_helper';\n\nimport Spinner from \"./components/spinner\";\nimport Header from \"./components/header\";\nimport List from \"./components/list\";\nimport Pagination from \"./components/pagination\";\n\nexport default class App extends React.Component {\n    constructor() {\n        super();\n        console.log(this.props);\n        this.api = new YT_API();\n        this.state = {\n          channel_ID: null,\n          prevPageToken: null,\n          nextPageToken: null,\n          pageToken: null,\n          page: 1,\n          list: [],\n          total: 0,\n          is_loading: true,\n        };\n        console.log('constructor: ', this.state);\n    }\n\n    get_list = (id, pageToken = null, results) => {\n        console.log('id: ', id, '\\n', 'pageToken: ', pageToken);\n        this.setState({\n            is_loading: true,\n        });\n        this.api.get_videos_from_list({\n            channel_ID: id,\n            pageToken: pageToken,\n            results: results,\n        })\n            .then(res => {\n                console.log('res: ', res);\n                const new_state = {\n                    channel_ID: id,\n                    list: res.items,\n                    is_loading: false,\n                    pageToken: pageToken,\n                    total: res.items && res.items.length,\n                };\n                new_state.prevPageToken = ('prevPageToken' in res) ? res.prevPageToken : null;\n                new_state.nextPageToken = ('nextPageToken' in res) ? res.nextPageToken : null;\n\n                this.setState(new_state);\n            })\n            .catch(e => {\n                console.error(JSON.parse(e.message));\n                this.setState({\n                    list: [],\n                    total: 0,\n                    is_loading: false,\n                });\n            });\n    };\n\n    increasePage = () => {\n        const { page, nextPageToken } = this.state;\n        const newPage = nextPageToken ? page + 1 : page;\n        this.setState({\n            page: newPage,\n            pageToken: nextPageToken,\n        });\n        console.log('increasePage');\n    };\n\n    decreasePage = () => {\n        const { page, prevPageToken } = this.state;\n        const newPage = prevPageToken ? page - 1 : 1;\n        this.setState({\n            page: newPage,\n            pageToken: prevPageToken,\n        });\n        console.log('decreasePage');\n    };\n\n    componentDidMount() {\n        const { channel_ID, pageToken, results } = this.props;\n        this.setState({\n           results: results,\n        });\n        console.log('did mount: ', this.state);\n        this.get_list(channel_ID, pageToken, results);\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        const { channel_ID, pageToken, results } = this.state;\n        if (!(\n                ( prevState.prevPageToken === this.state.prevPageToken )\n                && ( prevState.nextPageToken === this.state.nextPageToken )\n                && ( prevState.pageToken === this.state.pageToken )\n                && ( prevState.page === this.state.page )\n            )) {\n            this.get_list(channel_ID, pageToken, results);\n        }\n    };\n\n    render() {\n        console.log('render: ', this.state);\n        const {\n            list,\n            page,\n            total,\n            results,\n            pageToken,\n            is_loading,\n            prevPageToken,\n            nextPageToken,\n        } = this.state;\n        const result = is_loading ? <Spinner /> : (\n            <div className=\"App\">\n                <Header />\n                <List list={ list }/>\n                <Pagination\n                    increasePage = { this.increasePage }\n                    decreasePage = { this.decreasePage }\n                    page={ page }\n                    total={ total }\n                    results={ results }\n                    pageToken={ pageToken }\n                    prev_page={ prevPageToken }\n                    next_page={ nextPageToken }\n                />\n            </div>\n        );\n        return result;\n    };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { channel_ID } from './helpers/channel-id';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App\n    channel_ID={ channel_ID }\n    pageToken={ null }\n    results={ 18 }\n/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const channel_ID = 'UCHS9TqaY4gbhs-QvjH3lxAg';"],"sourceRoot":""}